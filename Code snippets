####1. code to convert collate and convert .tsv to .xlsx####
library(openxlsx)


copy_tsv_files <- function(source_root, destination_folder) {
  # Get list of all directories and subdirectories
  all_dirs <- list.dirs(path = source_root, recursive = TRUE, full.names = TRUE)
  

  for (dir in all_dirs) {
    # Get list of TSV files in the directory
    tsv_files <- list.files(dir, pattern = "\\.tsv$", full.names = TRUE)
    
   
    for (file in tsv_files) {
      destination_file <- file.path(destination_folder, basename(file))
      file.copy(file, destination_file)
      cat("Copied:", file, "to", destination_file, "\n")
    }
  }
}

tsv_to_xlsx <- function(tsv_file, output_folder) {

  df <- read.delim(tsv_file, sep = "\t", header = TRUE, skip = 1)  
  
  filename <- tools::file_path_sans_ext(basename(tsv_file))  
  
  output_file <- file.path(output_folder, paste0(filename, ".xlsx"))  

  write.xlsx(df, output_file)
  cat("Converted", tsv_file, "to", output_file, "\n")
}

convert_all_tsv_to_xlsx <- function(folder_path, output_folder) {
  # Create output folder if it doesn't exist
  if (!dir.exists(output_folder)) {
    dir.create(output_folder)
  }  
 
  tsv_files <- list.files(path = folder_path, pattern = "\\.tsv$", full.names = TRUE)  
 
  for (file in tsv_files) {
    tsv_to_xlsx(file, output_folder)
  }
}

source_root <- "C:/Users/mrudu/Documents/LIMS/Data/TCGA/TCGA_BRCA_MET"
destination_folder <- "C:/Users/mrudu/Documents/LIMS/Data/TCGA/TCGA_BRCA_MET"

copy_tsv_files(source_root, destination_folder)
convert_all_tsv_to_xlsx(destination_folder, destination_folder)




###code to filter protein coding genes###
library(openxlsx)
filter_and_display <- function(df) {
  # Filter rows where gene_type is "protein_coding"
  df_filtered <- subset(df, gene_type == "protein_coding")
  
  # Display only the first 3 and 7th columns
  df_filtered <- df_filtered[, c(1,2,3,7)]
  
  return(df_filtered)
}

folder_path <- "C:/Users/mrudu/Documents/LIMS/Data/TCGA/TCGA_BRCA_MET"

xlsx_files <- list.files(path = folder_path, pattern = ".xlsx", full.names = TRUE)

for (i in seq_along(xlsx_files)) {
  # Read the XLSX file
  tryCatch({
    cancer <- read.xlsx(xlsx_files[i])    
  
    cancer_filtered <- filter_and_display(cancer)    
  
    original_filename <- tools::file_path_sans_ext(basename(xlsx_files[i]))
    new_filename <- paste0(original_filename, ".xlsx")
    output_file <- file.path(folder_path, new_filename)    
   
    write.xlsx(cancer_filtered, file = output_file)    
  
    cat("Processed", xlsx_files[i], "and saved as", new_filename, "\n")
  }, error = function(e) {
    # Print an error message if an error occurs during processing
    cat("Error processing", xlsx_files[i], ": ", conditionMessage(e), "\n")
  })
}
